"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9975],{5796:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>n,metadata:()=>i,toc:()=>h});var l=s(651),d=s(82844);const n={pagination_next:null,pagination_prev:null},r="Variable: dateLib",i={id:"api/variables/dateLib",title:"Variable: dateLib",description:"const dateLib GenericDateConstructor\\;addDays \\(date, amount) => DateType;addWeeks \\(date, amount) => DateType;differenceInCalendarDays \\(dateLeft, dateRight) => number;endOfISOWeek \\(date) => DateType;endOfWeek \\(date) => DateType;format \\(date) => number;getUnixTime \\(date, options?) => number;isAfter \\(date, dateToCompare) => boolean;isDate \\(dateLeft, dateRight) => boolean;isSameMonth \\(dateLeft, dateRight) => boolean;max \\(dates) => DateType \\| Date;setMonth \\(date, year) => DateType;startOfDay \\(date) => DateType;startOfMonth \\(date, options?) => DateType;startOfYear: \\(date) => DateType; \\}",source:"@site/docs/api/variables/dateLib.md",sourceDirName:"api/variables",slug:"/api/variables/dateLib",permalink:"/next/api/variables/dateLib",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/api/variables/dateLib.md",tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null},sidebar:"api"},c={},h=[{value:"Type declaration",id:"type-declaration",level:2},{value:"Date",id:"date",level:3},{value:"See",id:"see",level:4},{value:"addDays()",id:"adddays",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"addMonths()",id:"addmonths",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"addWeeks()",id:"addweeks",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"addYears()",id:"addyears",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"differenceInCalendarDays()",id:"differenceincalendardays",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"differenceInCalendarMonths()",id:"differenceincalendarmonths",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"endOfISOWeek()",id:"endofisoweek",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"endOfMonth()",id:"endofmonth",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"endOfWeek()",id:"endofweek",level:3},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"endOfYear()",id:"endofyear",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"format()",id:"format",level:3},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"getISOWeek()",id:"getisoweek",level:3},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"getUnixTime()",id:"getunixtime",level:3},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"getWeek()",id:"getweek",level:3},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"isAfter()",id:"isafter",level:3},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"isBefore()",id:"isbefore",level:3},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"isDate()",id:"isdate",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"isSameDay()",id:"issameday",level:3},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"isSameMonth()",id:"issamemonth",level:3},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"isSameYear()",id:"issameyear",level:3},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"max()",id:"max",level:3},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"min()",id:"min",level:3},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"setMonth()",id:"setmonth",level:3},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"setYear()",id:"setyear",level:3},{value:"Type parameters",id:"type-parameters-22",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"startOfDay()",id:"startofday",level:3},{value:"Type parameters",id:"type-parameters-23",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"startOfISOWeek()",id:"startofisoweek",level:3},{value:"Type parameters",id:"type-parameters-24",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"startOfMonth()",id:"startofmonth",level:3},{value:"Type parameters",id:"type-parameters-25",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"startOfWeek()",id:"startofweek",level:3},{value:"Type parameters",id:"type-parameters-26",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"startOfYear()",id:"startofyear",level:3},{value:"Type parameters",id:"type-parameters-27",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Source",id:"source",level:2}];function x(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"variable-datelib",children:"Variable: dateLib"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"const"})," ",(0,l.jsx)(t.strong,{children:"dateLib"}),": {",(0,l.jsx)(t.code,{children:"Date"}),": ",(0,l.jsx)(t.code,{children:"GenericDateConstructor"}),"<",(0,l.jsx)(t.code,{children:"Date"}),">;",(0,l.jsx)(t.code,{children:"addDays"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"addMonths"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"addWeeks"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"addYears"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"differenceInCalendarDays"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"number"}),";",(0,l.jsx)(t.code,{children:"differenceInCalendarMonths"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"number"}),";",(0,l.jsx)(t.code,{children:"endOfISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"endOfMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"endOfWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"endOfYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"format"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"formatStr"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"string"}),";",(0,l.jsx)(t.code,{children:"getISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"number"}),";",(0,l.jsx)(t.code,{children:"getUnixTime"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"number"}),";",(0,l.jsx)(t.code,{children:"getWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"number"}),";",(0,l.jsx)(t.code,{children:"isAfter"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,l.jsx)(t.code,{children:"boolean"}),";",(0,l.jsx)(t.code,{children:"isBefore"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,l.jsx)(t.code,{children:"boolean"}),";",(0,l.jsx)(t.code,{children:"isDate"}),": (",(0,l.jsx)(t.code,{children:"value"}),") => ",(0,l.jsx)(t.code,{children:"value is Date"}),";",(0,l.jsx)(t.code,{children:"isSameDay"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"}),";",(0,l.jsx)(t.code,{children:"isSameMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"}),";",(0,l.jsx)(t.code,{children:"isSameYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"}),";",(0,l.jsx)(t.code,{children:"max"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dates"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"}),";",(0,l.jsx)(t.code,{children:"min"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dates"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"}),";",(0,l.jsx)(t.code,{children:"setMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"month"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"setYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"year"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"startOfDay"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"startOfISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"startOfMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"startOfWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"DateType"}),";",(0,l.jsx)(t.code,{children:"startOfYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"}),"; }"]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"The default date library to use with the date picker."}),"\n",(0,l.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,l.jsx)(t.h3,{id:"date",children:"Date"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"Date"}),": ",(0,l.jsx)(t.code,{children:"GenericDateConstructor"}),"<",(0,l.jsx)(t.code,{children:"Date"}),">"]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"The constructor of the date object."}),"\n",(0,l.jsxs)(t.p,{children:["You can pass a ",(0,l.jsx)(t.code,{children:"DateConstructor"})," such as ",(0,l.jsx)(t.code,{children:"UTCDate"})," from ",(0,l.jsx)(t.code,{children:"@date-fns/utc"})," to\nuse UTC dates."]}),"\n",(0,l.jsx)(t.h4,{id:"see",children:"See"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates",children:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates"})}),"\n",(0,l.jsx)(t.h3,{id:"adddays",children:"addDays()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"addDays"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"amount"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of days to be added."})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"addmonths",children:"addMonths()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"addMonths"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"amount"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of months to be added."})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"addweeks",children:"addWeeks()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"addWeeks"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-2",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"amount"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of weeks to be added."})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"addyears",children:"addYears()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"addYears"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"amount"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-3",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"amount"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of years to be added."})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-3",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"differenceincalendardays",children:"differenceInCalendarDays()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"differenceInCalendarDays"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-4",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateLeft"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The later date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateRight"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The earlier date"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-4",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"number"})}),"\n",(0,l.jsx)(t.h3,{id:"differenceincalendarmonths",children:"differenceInCalendarMonths()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"differenceInCalendarMonths"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-5",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateLeft"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The later date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateRight"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The earlier date"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-5",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"number"})}),"\n",(0,l.jsx)(t.h3,{id:"endofisoweek",children:"endOfISOWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"endOfISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-6",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-6",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"endofmonth",children:"endOfMonth()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"endOfMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-7",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-7",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"endofweek",children:"endOfWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"endOfWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-8",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"options"}),"?"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"EndOfWeekOptions"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-8",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"endofyear",children:"endOfYear()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"endOfYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-9",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-9",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"format",children:"format()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"format"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"formatStr"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-10",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"formatStr"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"options"}),"?"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"/next/api/interfaces/FormatOptions",children:(0,l.jsx)(t.code,{children:"FormatOptions"})})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-10",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"string"})}),"\n",(0,l.jsx)(t.h3,{id:"getisoweek",children:"getISOWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"getISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-11",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-11",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"number"})}),"\n",(0,l.jsx)(t.h3,{id:"getunixtime",children:"getUnixTime()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"getUnixTime"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-12",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-12",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"number"})}),"\n",(0,l.jsx)(t.h3,{id:"getweek",children:"getWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"getWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-13",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"options"}),"?"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"GetWeekOptions"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-13",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"number"})}),"\n",(0,l.jsx)(t.h3,{id:"isafter",children:"isAfter()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isAfter"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,l.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-14",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date that should be after the other one to return true"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateToCompare"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to compare with"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-14",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"boolean"})}),"\n",(0,l.jsx)(t.h3,{id:"isbefore",children:"isBefore()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isBefore"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,l.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-15",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date that should be before the other one to return true"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateToCompare"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to compare with"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-15",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"boolean"})}),"\n",(0,l.jsx)(t.h3,{id:"isdate",children:"isDate()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isDate"}),": (",(0,l.jsx)(t.code,{children:"value"}),") => ",(0,l.jsx)(t.code,{children:"value is Date"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"value"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"unknown"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The value to check"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-16",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"value is Date"})}),"\n",(0,l.jsx)(t.h3,{id:"issameday",children:"isSameDay()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isSameDay"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-16",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateLeft"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateRight"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-17",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"boolean"})}),"\n",(0,l.jsx)(t.h3,{id:"issamemonth",children:"isSameMonth()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isSameMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-17",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateLeft"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateRight"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-18",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"boolean"})}),"\n",(0,l.jsx)(t.h3,{id:"issameyear",children:"isSameYear()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"isSameYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dateLeft"}),", ",(0,l.jsx)(t.code,{children:"dateRight"}),") => ",(0,l.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-18",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateLeft"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dateRight"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-19",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"boolean"})}),"\n",(0,l.jsx)(t.h3,{id:"max",children:"max()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"max"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dates"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-19",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dates"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["(",(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"}),")[]"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The dates to compare"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-20",children:"Returns"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"})]}),"\n",(0,l.jsx)(t.h3,{id:"min",children:"min()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"min"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"dates"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-20",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dates"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["(",(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"}),")[]"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The dates to compare"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-21",children:"Returns"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"DateType"})," | ",(0,l.jsx)(t.code,{children:"Date"})]}),"\n",(0,l.jsx)(t.h3,{id:"setmonth",children:"setMonth()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"setMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"month"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-21",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"month"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The month index to set (0-11)"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-22",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"setyear",children:"setYear()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"setYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"year"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-22",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"year"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The year of the new date"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-23",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"startofday",children:"startOfDay()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"startOfDay"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-23",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-24",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"startofisoweek",children:"startOfISOWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"startOfISOWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-24",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-25",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"startofmonth",children:"startOfMonth()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"startOfMonth"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-25",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-26",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"startofweek",children:"startOfWeek()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"startOfWeek"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),", ",(0,l.jsx)(t.code,{children:"options"}),"?) => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-26",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"options"}),"?"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"StartOfWeekOptions"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-27",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h3,{id:"startofyear",children:"startOfYear()"}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"startOfYear"}),": <",(0,l.jsx)(t.code,{children:"DateType"}),">(",(0,l.jsx)(t.code,{children:"date"}),") => ",(0,l.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"type-parameters-27",children:"Type parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"DateType"})," ",(0,l.jsx)(t.em,{children:"extends"})," ",(0,l.jsx)(t.code,{children:"Date"})]}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,l.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,l.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,l.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsx)(t.tbody,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"date"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,l.jsx)(t.code,{children:"string"})," | ",(0,l.jsx)(t.code,{children:"number"})," | ",(0,l.jsx)(t.code,{children:"DateType"})]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,l.jsx)(t.h4,{id:"returns-28",children:"Returns"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.code,{children:"DateType"})}),"\n",(0,l.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/11b673418a3bac5948628bc5017f5e3d1de5427b/src/lib/dateLib.ts#L40",children:"src/lib/dateLib.ts:40"})})]})}function a(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(x,{...e})}):x(e)}},82844:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>r});var l=s(92379);const d={},n=l.createContext(d);function r(e){const t=l.useContext(n);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),l.createElement(n.Provider,{value:t},e.children)}}}]);