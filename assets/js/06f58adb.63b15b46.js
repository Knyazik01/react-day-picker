"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2649],{51246:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>p});var s=n(651),i=n(82844);const t={pagination_next:null,pagination_prev:null},a="Type alias: DayPickerProps",c={id:"api/type-aliases/DayPickerProps",title:"Type alias: DayPickerProps",description:"DayPickerProps undefined; \\}",source:"@site/docs/api/type-aliases/DayPickerProps.md",sourceDirName:"api/type-aliases",slug:"/api/type-aliases/DayPickerProps",permalink:"/next/api/type-aliases/DayPickerProps",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/api/type-aliases/DayPickerProps.md",tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null},sidebar:"api"},o={},p=[{value:"Source",id:"source",level:2}];function l(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"type-alias-daypickerprops",children:"Type alias: DayPickerProps"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"DayPickerProps"}),": ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsBase",children:(0,s.jsx)(r.code,{children:"PropsBase"})})," & ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsSingle",children:(0,s.jsx)(r.code,{children:"PropsSingle"})})," | ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsSingleRequired",children:(0,s.jsx)(r.code,{children:"PropsSingleRequired"})})," | ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsMulti",children:(0,s.jsx)(r.code,{children:"PropsMulti"})})," | ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsMultiRequired",children:(0,s.jsx)(r.code,{children:"PropsMultiRequired"})})," | ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsRange",children:(0,s.jsx)(r.code,{children:"PropsRange"})})," | ",(0,s.jsx)(r.a,{href:"/next/api/interfaces/PropsRangeRequired",children:(0,s.jsx)(r.code,{children:"PropsRangeRequired"})})," | {",(0,s.jsx)(r.code,{children:"mode"}),": ",(0,s.jsx)(r.code,{children:"undefined"}),"; }"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["The props for the ",(0,s.jsx)(r.code,{children:"<DayPicker />"})," component."]}),"\n",(0,s.jsx)(r.h2,{id:"source",children:"Source"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/types/props.ts#L30",children:"src/types/props.ts:30"})})]})}function d(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},82844:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>a});var s=n(92379);const i={},t=s.createContext(i);function a(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);