"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5375],{8161:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=a(651),n=a(1725);const r={},i="Type alias: DayOfWeek",c={id:"api/type-aliases/DayOfWeek",title:"Type alias: DayOfWeek",description:"DayOfWeek number[]; \\}",source:"@site/docs/api/type-aliases/DayOfWeek.md",sourceDirName:"api/type-aliases",slug:"/api/type-aliases/DayOfWeek",permalink:"/api/type-aliases/DayOfWeek",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/docs/api/type-aliases/DayOfWeek.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"DayMouseEventHandler",permalink:"/api/type-aliases/DayMouseEventHandler"},next:{title:"DayPickerProps",permalink:"/api/type-aliases/DayPickerProps"}},l={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"Source",id:"source",level:2}];function o(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"type-alias-dayofweek",children:"Type alias: DayOfWeek"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"DayOfWeek"}),": {",(0,s.jsx)(t.code,{children:'"dayOfWeek"'}),": ",(0,s.jsx)(t.code,{children:"number"}),"[]; }"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["A matcher to match a date being one of the specified days of the week (",(0,s.jsx)(t.code,{children:"0-6"}),",\nwhere ",(0,s.jsx)(t.code,{children:"0"})," is Sunday)."]}),"\n",(0,s.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Member"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dayOfWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"number"}),"[]"]})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/05f5d6559aa2f1f3a0d03dca7d9a7f21ff944ce5/src/types/Matchers.ts#L90",children:"src/types/Matchers.ts:90"})})]})}function p(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1725:(e,t,a)=>{a.d(t,{Z:()=>c,a:()=>i});var s=a(2379);const n={},r=s.createContext(n);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);