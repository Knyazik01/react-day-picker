"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6069],{17125:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=n(651),o=n(82844);const i={sidebar_position:4},a="Custom Components",r={id:"advanced-guides/custom-components",title:"Custom Components",description:"Use the components prop to swap the components used to render DayPicker.",source:"@site/docs/advanced-guides/custom-components.mdx",sourceDirName:"advanced-guides",slug:"/advanced-guides/custom-components",permalink:"/next/advanced-guides/custom-components",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/advanced-guides/custom-components.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"Custom Modifiers",permalink:"/next/advanced-guides/custom-modifiers"}},c={},l=[{value:"List of Custom Components",id:"list-of-custom-components",level:2},{value:"Example: Custom DayDate component",id:"example-custom-daydate-component",level:2},{value:"Extending the Default Components",id:"extending-the-default-components",level:3},{value:"DayPicker Hooks",id:"daypicker-hooks",level:2},{value:"Example: Range with Shift Key",id:"example-range-with-shift-key",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{BrowserWindow:n,Examples:i}=t;return n||p("BrowserWindow",!0),i||p("Examples",!1),i.CustomDayDate||p("Examples.CustomDayDate",!0),i.RangeShiftKey||p("Examples.RangeShiftKey",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"custom-components",children:"Custom Components"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"components"})," prop to swap the components used to render DayPicker."]}),"\n",(0,s.jsx)(t.admonition,{title:"Advanced Feature",type:"warning",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This feature requires basic understanding of the output generated by DayPicker."}),"\n",(0,s.jsxs)(t.li,{children:["Get familiar with the ",(0,s.jsx)(t.a,{href:"../api#components",children:"API Reference"})," and the ",(0,s.jsx)(t.a,{href:"/next/using-daypicker/anatomy",children:"DayPicker Anatomy"})," first."]}),"\n",(0,s.jsxs)(t.li,{children:["Make sure you don't break ",(0,s.jsx)(t.a,{href:"/next/using-daypicker/accessibility",children:"accessibility"})," when customizing components."]}),"\n",(0,s.jsx)(t.li,{children:"Custom components may not have a stable API yet and may break in a minor release."}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"list-of-custom-components",children:"List of Custom Components"}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"../api#components",children:"Components API Reference"})," for a list of components you can customize."]}),"\n",(0,s.jsx)(t.h2,{id:"example-custom-daydate-component",children:"Example: Custom DayDate component"}),"\n",(0,s.jsxs)(t.p,{children:["For example, if you need to customize the component displaying the date, replace the ",(0,s.jsx)(t.a,{href:"/next/api/functions/DayDate",children:(0,s.jsx)(t.code,{children:"DayDate"})})," component:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:'title="./MyDatePicker.tsx"',children:'import { DayPicker, type DayDateProps } from "react-day-picker";\n\n/** When the date is 19, will display an emoji. */\nfunction HighlightDay(props: DayDateProps) {\n  return (\n    <span {...props.rootProps} style={{ whiteSpace: "nowrap" }}>\n      {props.day.date.getDate() === 19 ? `\ud83c\udf89` : props.formattedDate}\n    </span>\n  );\n}\n\nexport function MyDatePicker() {\n  return <DayPicker mode="single" components={{ DayDate: HighlightDay }} />;\n}\n'})}),"\n",(0,s.jsx)(n,{children:(0,s.jsx)(i.CustomDayDate,{})}),"\n",(0,s.jsx)(t.h3,{id:"extending-the-default-components",children:"Extending the Default Components"}),"\n",(0,s.jsx)(t.p,{children:"You can also import the default components to add custom behavior. Just make sure you pass the default component to the root."}),"\n",(0,s.jsxs)(t.p,{children:["For example, to add a custom class to the ",(0,s.jsx)(t.code,{children:"Day"})," component:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:'title="./CustomDay.tsx"',children:'import { DayPicker, Day, type DayProps } from "react-day-picker";\n\nfunction CustomDay(props: DayProps) {\n  return (\n    <Day {...props}>\n      <div className="custom-day">{props.children}</div>\n    </Day>\n  );\n}\n\nexport function MyDatePicker() {\n  return <DayPicker components={{ Day: CustomDay }} />;\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"daypicker-hooks",children:"DayPicker Hooks"}),"\n",(0,s.jsxs)(t.p,{children:["When creating custom components, you will find useful the ",(0,s.jsx)(t.a,{href:"/next/api/#hooks",children:"DayPicker hooks"}),". These utilities provide access to the internal state and methods of the DayPicker component."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Function"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useCalendar",children:"useCalendar"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Access to the props passed to ",(0,s.jsx)(t.code,{children:"DayPicker"}),", with some meaningful defaults."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useFocus",children:"useFocus"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Share the focused day and the methods to move the focus."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useModifiers",children:"useModifiers"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useMulti",children:"useMulti"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Access to the multi context to get the selected dates or update them."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useProps",children:"useProps"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Access to the props passed to ",(0,s.jsx)(t.code,{children:"DayPicker"}),", with some meaningful defaults."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useRange",children:"useRange"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Access to the range context to get the selected range or update it."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/functions/useSingle",children:"useSingle"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Access to the single context to get the selected date or update it."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"example-range-with-shift-key",children:"Example: Range with Shift Key"}),"\n",(0,s.jsxs)(t.p,{children:["Implement a custom ",(0,s.jsx)(t.code,{children:"Day"})," component to select ranges while pressing the ",(0,s.jsx)("kbd",{children:"Shift"})," key."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'import React, { MouseEventHandler } from "react";\n\nimport {\n  DateRange,\n  DayPicker,\n  type DayProps,\n  useRange\n} from "react-day-picker";\n\nfunction DayWithShiftKey(props: DayProps) {\n  const { selected } = useRange();\n  const onClick = props.htmlAttributes?.onClick;\n\n  const handleClick: MouseEventHandler<HTMLElement> = (e) => {\n    if (selected.from && !selected.to && !isSameDay(props.day.date, selected.from) && !e.shiftKey && ) {\n      return;\n    }\n    onClick?.(e);\n  };\n  return (\n    <div {...props.htmlAttributes} onClick={handleClick}>\n      {props.children}\n    </div>\n  );\n}\n\nexport function RangeShiftKey() {\n  const [range, setRange] = React.useState<DateRange>();\n\n  let footer = <p>Please pick a day.</p>;\n\n  if (range?.from && !range?.to) {\n    footer = <p>Press Shift to choose more days.</p>;\n  } else if (range?.to) {\n    footer = (\n      <p>\n        {range.from.toLocaleDateString()}\u2014{range.to.toLocaleDateString()}.\n      </p>\n    );\n  }\n  return (\n    <DayPicker\n      components={{\n        Day: DayWithShiftKey\n      }}\n      mode="range"\n      onSelect={setRange}\n      footer={footer}\n    />\n  );\n}\n'})}),"\n",(0,s.jsx)(n,{children:(0,s.jsx)(i.RangeShiftKey,{})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},82844:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var s=n(92379);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);