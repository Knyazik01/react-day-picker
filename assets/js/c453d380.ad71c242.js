"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9014],{7871:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>o});var t=n(651),r=n(1725);const s={},c="Function: isDayPickerSingle()",a={id:"api/functions/isDayPickerSingle",title:"Function: isDayPickerSingle()",description:"isDayPickerSingle(props): props is DayPickerSingleProps",source:"@site/docs/api/functions/isDayPickerSingle.md",sourceDirName:"api/functions",slug:"/api/functions/isDayPickerSingle",permalink:"/api/functions/isDayPickerSingle",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/api/functions/isDayPickerSingle.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"isDayPickerRange",permalink:"/api/functions/isDayPickerRange"},next:{title:"isMatch",permalink:"/api/functions/isMatch"}},l={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Source",id:"source",level:2}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"function-isdaypickersingle",children:"Function: isDayPickerSingle()"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"isDayPickerSingle"}),"(",(0,t.jsx)(i.code,{children:"props"}),"): ",(0,t.jsx)(i.code,{children:"props is DayPickerSingleProps"})]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Returns true when the props are of type ",(0,t.jsx)(i.a,{href:"/api/interfaces/DayPickerSingleProps",children:"DayPickerSingleProps"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{style:{textAlign:"left"},children:"Parameter"}),(0,t.jsx)(i.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(i.tbody,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{style:{textAlign:"left"},children:(0,t.jsx)(i.code,{children:"props"})}),(0,t.jsxs)(i.td,{style:{textAlign:"left"},children:[(0,t.jsx)(i.a,{href:"/api/interfaces/DayPickerContextValue",children:(0,t.jsx)(i.code,{children:"DayPickerContextValue"})})," | ",(0,t.jsx)(i.a,{href:"/api/type-aliases/DayPickerProps",children:(0,t.jsx)(i.code,{children:"DayPickerProps"})})]})]})})]}),"\n",(0,t.jsx)(i.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.code,{children:"props is DayPickerSingleProps"})}),"\n",(0,t.jsx)(i.h2,{id:"source",children:"Source"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/gpbl/react-day-picker/blob/d47ea3183fed1253f6f1447062c87871df555138/src/types/DayPickerSingle.ts#L19",children:"src/types/DayPickerSingle.ts:19"})})]})}function p(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1725:(e,i,n)=>{n.d(i,{Z:()=>a,a:()=>c});var t=n(2379);const r={},s=t.createContext(r);function c(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);