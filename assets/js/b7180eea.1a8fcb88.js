"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5384],{2742:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var n=t(651),d=t(2844);const r={sidebar_position:2},i="Styling",l={id:"using-daypicker/styling",title:"Styling",description:"DayPicker comes with a minimal style inspired by MacOS date pickers, designed to be extended and customized.",source:"@site/docs/using-daypicker/styling.mdx",sourceDirName:"using-daypicker",slug:"/using-daypicker/styling",permalink:"/next/using-daypicker/styling",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/using-daypicker/styling.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"DayPicker Anatomy",permalink:"/next/using-daypicker/anatomy"},next:{title:"Customization",permalink:"/next/using-daypicker/customization"}},c={},a=[{value:"Default Style",id:"default-style",level:2},{value:"CSS Variables",id:"css-variables",level:3},{value:"Light/Dark Appearance",id:"lightdark-appearance",level:3},{value:"Importing the CSS Module",id:"importing-the-css-module",level:3},{value:"Custom Class Names",id:"custom-class-names",level:2},{value:"Tailwind CSS",id:"tailwind-css",level:3},{value:"Inline Styles",id:"inline-styles",level:2}];function o(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components},{BrowserWindow:t,Details:r,Examples:i}=s;return t||x("BrowserWindow",!0),r||x("Details",!0),i||x("Examples",!1),i.CssModules||x("Examples.CssModules",!0),i.TailwindCSS||x("Examples.TailwindCSS",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"styling",children:"Styling"}),"\n",(0,n.jsx)(s.p,{children:"DayPicker comes with a minimal style inspired by MacOS date pickers, designed to be extended and customized."}),"\n",(0,n.jsxs)(s.p,{children:["You can also use your own styles, or use a CSS framework like ",(0,n.jsx)(s.a,{href:"https://tailwindcss.com",children:"Tailwind CSS"})," or ",(0,n.jsx)(s.a,{href:"https://getbootstrap.com",children:"Bootstrap"})," utilities to style the calendar."]}),"\n",(0,n.jsx)(s.h2,{id:"default-style",children:"Default Style"}),"\n",(0,n.jsxs)(s.p,{children:["To start with the included styles, add the ",(0,n.jsx)(s.code,{children:"react-day-picker/style.css"})," to your HTML document. This will add the ",(0,n.jsx)(s.code,{children:".rdp"})," class names used by DayPicker."]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Using a bundler or a React framework"}),(0,n.jsxs)(s.p,{children:["If you are using a React framework, such as ",(0,n.jsx)(s.a,{href:"http://nextjs.org",children:"Next.js"})," or ",(0,n.jsx)(s.a,{href:"https://www.gatsbyjs.com",children:"Gatsby"}),", or a bundler like Webpack with ",(0,n.jsx)(s.a,{href:"https://webpack.js.org/loaders/css-loader/",children:"css-loader"}),", import the CSS file from your app's main JavaScript or TypeScript file:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="./App.jsx"',children:'import "react-day-picker/style.css";\n'})})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Copying the CSS file"}),(0,n.jsxs)(s.p,{children:["If you are not using a bundler, you can copy the CSS file to your project. See ",(0,n.jsx)(s.a,{href:"https://github.com/gpbl/react-day-picker/blob/main/src/style.css",children:"style.css"})," in the DayPicker repository for the source."]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-html",metastring:'title="./public/index.html"',children:"<style>\n  /* Copy the content of the style.css file here. */\n</style>\n"})})]}),"\n",(0,n.jsx)(s.h3,{id:"css-variables",children:"CSS Variables"}),"\n",(0,n.jsx)(s.p,{children:"The default styles use CSS variables that can be overridden to customize the appearance of the calendar. Define the CSS variables in your app's CSS file, after importing the DayPicker CSS file:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="./app/global.css"',children:":root {\n  --rdp-accent-color: indigo; /* Change the accent color to indigo. */\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"The following table lists the CSS variables used by DayPicker:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"CSS Variable Name"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-accent-color"})}),(0,n.jsx)(s.td,{children:"The accent color used for selected days and UI elements."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-day-border-radius"})}),(0,n.jsx)(s.td,{children:"The border radius of the day cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-day-border"})}),(0,n.jsx)(s.td,{children:"The border of the day cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-day-font"})}),(0,n.jsx)(s.td,{children:"The font used for the day cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-day-height"})}),(0,n.jsx)(s.td,{children:"The height of the day cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-day-width"})}),(0,n.jsx)(s.td,{children:"The width of the day cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-disabled-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the disabled days."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-dropdown-gap"})}),(0,n.jsx)(s.td,{children:"The distance bete=ween the dropdowns."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-excluded-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the excluded days."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-font-family"})}),(0,n.jsxs)(s.td,{children:["The font family used by the calendar (",(0,n.jsx)(s.code,{children:"inherited"})," won't work here)."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-month-caption-font"})}),(0,n.jsx)(s.td,{children:"The font of the month caption."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-months-gap"})}),(0,n.jsx)(s.td,{children:"The distance between the month grids in the multi-month view."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-nav-button-border-radius"})}),(0,n.jsx)(s.td,{children:"The border radius of the navigation buttons."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-nav-button-disabled-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the disabled navigation buttons."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-nav-button-height"})}),(0,n.jsx)(s.td,{children:"The height of the navigation buttons."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-nav-button-width"})}),(0,n.jsx)(s.td,{children:"The width of the navigation buttons."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-nav-height"})}),(0,n.jsx)(s.td,{children:"The height of the navigation bar."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-outside-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the days outside the current month."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-range-background-color"})}),(0,n.jsx)(s.td,{children:"The color of the range background."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-range-color"})}),(0,n.jsx)(s.td,{children:"The color of the range text."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-selected-border"})}),(0,n.jsx)(s.td,{children:"The border of the selected days."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-selected-font"})}),(0,n.jsx)(s.td,{children:"The font of the selected days."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-today-color"})}),(0,n.jsx)(s.td,{children:"The color of today's date."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-weekday-font"})}),(0,n.jsx)(s.td,{children:"The font of the weekday."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-weekday-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the weekday."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-weekday-padding"})}),(0,n.jsx)(s.td,{children:"The padding of the weekday."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-weekday-text-align"})}),(0,n.jsx)(s.td,{children:"The text alignment of the weekday cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-border-radius"})}),(0,n.jsx)(s.td,{children:"The border radius of the week number."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-border"})}),(0,n.jsx)(s.td,{children:"The border of the week number."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-font"})}),(0,n.jsx)(s.td,{children:"The font of the week number cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-height"})}),(0,n.jsx)(s.td,{children:"The height of the week number cells."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-opacity"})}),(0,n.jsx)(s.td,{children:"The opacity of the week number."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"--rdp-week_number-width"})}),(0,n.jsx)(s.td,{children:"The width of the week number cells."})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"lightdark-appearance",children:"Light/Dark Appearance"}),"\n",(0,n.jsx)(s.p,{children:"To toggle between dark and light appearance, override the accent color with the color to use in the dark mode."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",children:':root {\n  --rdp-accent-color: blue; /* Use blue as the accent color. */\n}\n[data-theme="dark"] {\n  --rdp-accent-color: yellow; /* Use yellow as the accent color in dark mode. */\n}\n'})}),"\n",(0,n.jsx)(s.h3,{id:"importing-the-css-module",children:"Importing the CSS Module"}),"\n",(0,n.jsxs)(s.p,{children:["You can import ",(0,n.jsx)(s.code,{children:"style.module.css"})," if you want your CSS pre-processor to parse it. Pass the imported styles to the ",(0,n.jsx)(s.code,{children:"classNames"})," prop."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",metastring:'title="./MyDatePicker.jsx"',children:'import { DayPicker } from "react-day-picker";\nimport styles from "react-day-picker/style.module.css";\n\nconsole.log(styles); // Output the class names as parsed by CSS modules.\n\nexport function MyDatePicker() {\n  return <DayPicker classNames={styles} />;\n}\n'})}),"\n",(0,n.jsx)(t,{children:(0,n.jsx)(i.CssModules,{})}),"\n",(0,n.jsx)(s.h2,{id:"custom-class-names",children:"Custom Class Names"}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.code,{children:"classNames"})," prop to use other classnames instead of the default ones. The ",(0,n.jsx)(s.a,{href:"/next/api/type-aliases/ClassNames",children:(0,n.jsx)(s.code,{children:"ClassNames"})})," type lists all the class names used by DayPicker. They are the value of the ",(0,n.jsx)(s.a,{href:"/next/api/enumerations/UI",children:(0,n.jsx)(s.code,{children:"UI"})}),", ",(0,n.jsx)(s.a,{href:"/next/api/enumerations/DayModifier",children:(0,n.jsx)(s.code,{children:"DayModifiers"})})," and ",(0,n.jsx)(s.a,{href:"/next/api/enumerations/CalendarFlag",children:(0,n.jsx)(s.code,{children:"CalendarFlag"})})," enums."]}),"\n",(0,n.jsx)(s.p,{children:"For example, to change the class name of the calendar container:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",children:'<DayPicker classNames={{ calendar: "my-calendar" }} />\n'})}),"\n",(0,n.jsx)(s.p,{children:"Or the disabled days:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'<DayPicker classNames={{ disabled: "my-disabled_style" }} />\n'})}),"\n",(0,n.jsx)(s.h3,{id:"tailwind-css",children:"Tailwind CSS"}),"\n",(0,n.jsxs)(s.p,{children:["If you are including ",(0,n.jsx)(s.a,{href:"https://tailwindcss.com",children:"Tailwind CSS"})," in your project, use the Tailwind CSS class names to style the calendar."]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Add to the ",(0,n.jsx)(s.code,{children:"classNames"})," the class names you want to override."]}),"\n",(0,n.jsxs)(s.li,{children:["Extend the default class names with ",(0,n.jsx)(s.a,{href:"/next/api/functions/getDefaultClassNames",children:(0,n.jsx)(s.code,{children:"getDefaultClassNames"})}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Read ",(0,n.jsx)(s.a,{href:"https://github.com/gpbl/react-day-picker/blob/main/src/style.css",children:(0,n.jsx)(s.code,{children:"style.css"})})," from source and get familiar with the ",(0,n.jsx)(s.a,{href:"/next/using-daypicker/anatomy",children:"UI elements"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Adopt ",(0,n.jsx)(s.a,{href:"../using-daypicker/custom-components.mdx",children:"custom components"})," to further customize the HTML elements."]}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",children:'import { DayPicker, getDefaultClassNames } from "react-day-picker";\n\nexport function MyCalendar() {\n  const defaultClassNames = getDefaultClassNames();\n  return (\n    <DayPicker\n      mode="single"\n      classNames={{\n        today: `border-amber-500`, // Add a border to today\'s date\n        selected: `bg-amber-500 border-amber-500 text-white`, // Highlight the selected day\n        calendar: `${defaultClassNames.calendar} shadow-lg p-5` // Add a shadow to the calendar\n        chevron: `${defaultClassNames.chevron} fill-amber-500` // Change the color of the chevron\n      }}\n    />\n  );\n}\n'})}),"\n",(0,n.jsx)(t,{children:(0,n.jsx)(i.TailwindCSS,{})}),"\n",(0,n.jsx)(s.admonition,{title:"TailwindCSS-only CSS",type:"info",children:(0,n.jsxs)(s.p,{children:["We currently don't have a CSS file ",(0,n.jsx)(s.em,{children:"completely"})," written in TailwindCSS. If you want, you can help us to create one to include in the docs here. ",(0,n.jsx)(s.a,{href:"https://github.com/gpbl/react-day-picker/discussions/new?category=ideas",children:"Open a thread"})]})}),"\n",(0,n.jsx)(s.h2,{id:"inline-styles",children:"Inline Styles"}),"\n",(0,n.jsxs)(s.p,{children:["To change the appearance of any DayPicker element via inline-styles use the ",(0,n.jsx)(s.code,{children:"styles"})," prop."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",children:'const monthCaptionStyle = {\n  borderBottom: "1px solid currentColor",\n  paddingBottom: "0.5em"\n};\n// ...\n<DayPicker\n  styles={{\n    month_caption: monthCaptionStyle\n  }}\n/>;\n'})})]})}function h(e={}){const{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}function x(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},2844:(e,s,t)=>{t.d(s,{Z:()=>l,a:()=>i});var n=t(2379);const d={},r=n.createContext(d);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);