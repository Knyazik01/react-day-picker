"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9181],{37619:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>n,metadata:()=>i,toc:()=>h});var s=l(651),d=l(82844);const n={pagination_next:null,pagination_prev:null},r="Class: CalendarDay",i={id:"api/classes/CalendarDay",title:"Class: CalendarDay",description:"Represent the day displayed in the calendar.",source:"@site/docs/api/classes/CalendarDay.md",sourceDirName:"api/classes",slug:"/api/classes/CalendarDay",permalink:"/next/api/classes/CalendarDay",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/website/docs/api/classes/CalendarDay.md",tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null},sidebar:"api"},c={},h=[{value:"Constructors",id:"constructors",level:2},{value:"new CalendarDay()",id:"new-calendarday",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Source",id:"source",level:4},{value:"Methods",id:"methods",level:2},{value:"isEqualTo()",id:"isequalto",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Source",id:"source-1",level:4},{value:"Properties",id:"properties",level:2},{value:"date",id:"date",level:3},{value:"Source",id:"source-2",level:4},{value:"dateLib",id:"datelib",level:3},{value:"Date",id:"date-1",level:4},{value:"See",id:"see",level:5},{value:"addDays()",id:"adddays",level:4},{value:"Type parameters",id:"type-parameters",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Returns",id:"returns-2",level:5},{value:"addMonths()",id:"addmonths",level:4},{value:"Type parameters",id:"type-parameters-1",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"Returns",id:"returns-3",level:5},{value:"addWeeks()",id:"addweeks",level:4},{value:"Type parameters",id:"type-parameters-2",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Returns",id:"returns-4",level:5},{value:"addYears()",id:"addyears",level:4},{value:"Type parameters",id:"type-parameters-3",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Returns",id:"returns-5",level:5},{value:"differenceInCalendarDays()",id:"differenceincalendardays",level:4},{value:"Type parameters",id:"type-parameters-4",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Returns",id:"returns-6",level:5},{value:"differenceInCalendarMonths()",id:"differenceincalendarmonths",level:4},{value:"Type parameters",id:"type-parameters-5",level:5},{value:"Parameters",id:"parameters-7",level:5},{value:"Returns",id:"returns-7",level:5},{value:"endOfISOWeek()",id:"endofisoweek",level:4},{value:"Type parameters",id:"type-parameters-6",level:5},{value:"Parameters",id:"parameters-8",level:5},{value:"Returns",id:"returns-8",level:5},{value:"endOfMonth()",id:"endofmonth",level:4},{value:"Type parameters",id:"type-parameters-7",level:5},{value:"Parameters",id:"parameters-9",level:5},{value:"Returns",id:"returns-9",level:5},{value:"endOfWeek()",id:"endofweek",level:4},{value:"Type parameters",id:"type-parameters-8",level:5},{value:"Parameters",id:"parameters-10",level:5},{value:"Returns",id:"returns-10",level:5},{value:"endOfYear()",id:"endofyear",level:4},{value:"Type parameters",id:"type-parameters-9",level:5},{value:"Parameters",id:"parameters-11",level:5},{value:"Returns",id:"returns-11",level:5},{value:"format()",id:"format",level:4},{value:"Type parameters",id:"type-parameters-10",level:5},{value:"Parameters",id:"parameters-12",level:5},{value:"Returns",id:"returns-12",level:5},{value:"getISOWeek()",id:"getisoweek",level:4},{value:"Type parameters",id:"type-parameters-11",level:5},{value:"Parameters",id:"parameters-13",level:5},{value:"Returns",id:"returns-13",level:5},{value:"getUnixTime()",id:"getunixtime",level:4},{value:"Type parameters",id:"type-parameters-12",level:5},{value:"Parameters",id:"parameters-14",level:5},{value:"Returns",id:"returns-14",level:5},{value:"getWeek()",id:"getweek",level:4},{value:"Type parameters",id:"type-parameters-13",level:5},{value:"Parameters",id:"parameters-15",level:5},{value:"Returns",id:"returns-15",level:5},{value:"isAfter()",id:"isafter",level:4},{value:"Type parameters",id:"type-parameters-14",level:5},{value:"Parameters",id:"parameters-16",level:5},{value:"Returns",id:"returns-16",level:5},{value:"isBefore()",id:"isbefore",level:4},{value:"Type parameters",id:"type-parameters-15",level:5},{value:"Parameters",id:"parameters-17",level:5},{value:"Returns",id:"returns-17",level:5},{value:"isDate()",id:"isdate",level:4},{value:"Parameters",id:"parameters-18",level:5},{value:"Returns",id:"returns-18",level:5},{value:"isSameDay()",id:"issameday",level:4},{value:"Type parameters",id:"type-parameters-16",level:5},{value:"Parameters",id:"parameters-19",level:5},{value:"Returns",id:"returns-19",level:5},{value:"isSameMonth()",id:"issamemonth",level:4},{value:"Type parameters",id:"type-parameters-17",level:5},{value:"Parameters",id:"parameters-20",level:5},{value:"Returns",id:"returns-20",level:5},{value:"isSameYear()",id:"issameyear",level:4},{value:"Type parameters",id:"type-parameters-18",level:5},{value:"Parameters",id:"parameters-21",level:5},{value:"Returns",id:"returns-21",level:5},{value:"max()",id:"max",level:4},{value:"Type parameters",id:"type-parameters-19",level:5},{value:"Parameters",id:"parameters-22",level:5},{value:"Returns",id:"returns-22",level:5},{value:"min()",id:"min",level:4},{value:"Type parameters",id:"type-parameters-20",level:5},{value:"Parameters",id:"parameters-23",level:5},{value:"Returns",id:"returns-23",level:5},{value:"setMonth()",id:"setmonth",level:4},{value:"Type parameters",id:"type-parameters-21",level:5},{value:"Parameters",id:"parameters-24",level:5},{value:"Returns",id:"returns-24",level:5},{value:"setYear()",id:"setyear",level:4},{value:"Type parameters",id:"type-parameters-22",level:5},{value:"Parameters",id:"parameters-25",level:5},{value:"Returns",id:"returns-25",level:5},{value:"startOfDay()",id:"startofday",level:4},{value:"Type parameters",id:"type-parameters-23",level:5},{value:"Parameters",id:"parameters-26",level:5},{value:"Returns",id:"returns-26",level:5},{value:"startOfISOWeek()",id:"startofisoweek",level:4},{value:"Type parameters",id:"type-parameters-24",level:5},{value:"Parameters",id:"parameters-27",level:5},{value:"Returns",id:"returns-27",level:5},{value:"startOfMonth()",id:"startofmonth",level:4},{value:"Type parameters",id:"type-parameters-25",level:5},{value:"Parameters",id:"parameters-28",level:5},{value:"Returns",id:"returns-28",level:5},{value:"startOfWeek()",id:"startofweek",level:4},{value:"Type parameters",id:"type-parameters-26",level:5},{value:"Parameters",id:"parameters-29",level:5},{value:"Returns",id:"returns-29",level:5},{value:"startOfYear()",id:"startofyear",level:4},{value:"Type parameters",id:"type-parameters-27",level:5},{value:"Parameters",id:"parameters-30",level:5},{value:"Returns",id:"returns-30",level:5},{value:"Source",id:"source-3",level:4},{value:"displayMonth",id:"displaymonth",level:3},{value:"Source",id:"source-4",level:4},{value:"outside",id:"outside",level:3},{value:"Source",id:"source-5",level:4}];function x(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"class-calendarday",children:"Class: CalendarDay"}),"\n",(0,s.jsx)(t.p,{children:"Represent the day displayed in the calendar."}),"\n",(0,s.jsxs)(t.p,{children:["In DayPicker, a ",(0,s.jsx)(t.code,{children:"Day"})," is a ",(0,s.jsx)(t.code,{children:"Date"})," that can be displayed in the calendar. It\nis used as extension of the native ",(0,s.jsx)(t.code,{children:"Date"})," object to provide additional\ninformation about the day."]}),"\n",(0,s.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(t.h3,{id:"new-calendarday",children:"new CalendarDay()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"new CalendarDay"}),"(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"displayMonth"}),", ",(0,s.jsx)(t.code,{children:"dateLib"}),"): ",(0,s.jsx)(t.a,{href:"/next/api/classes/CalendarDay",children:(0,s.jsx)(t.code,{children:"CalendarDay"})})]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Date"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"displayMonth"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Date"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"object"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"defaultDateLib"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.Date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"GenericDateConstructor"}),"<",(0,s.jsx)(t.code,{children:"Date"}),">"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)("p",{children:"The constructor of the date object."}),(0,s.jsxs)("p",{children:["You can pass a ",(0,s.jsx)(t.code,{children:"DateConstructor"})," such as ",(0,s.jsx)(t.code,{children:"UTCDate"})," from ",(0,s.jsx)(t.code,{children:"@date-fns/utc"})," to use UTC dates."]}),(0,s.jsx)("p",{children:(0,s.jsx)(t.strong,{children:"See"})}),(0,s.jsx)("p",{children:(0,s.jsx)(t.a,{href:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates",children:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates"})})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.addDays"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.addMonths"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.addWeeks"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.addYears"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.differenceInCalendarDays"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.differenceInCalendarMonths"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.endOfISOWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.endOfMonth"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.endOfWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.endOfYear"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.format"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"formatStr"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"string"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.getISOWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.getUnixTime"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.getWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"number"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isAfter"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isBefore"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isDate"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(t.code,{children:"value"}),") => ",(0,s.jsx)(t.code,{children:"value is Date"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isSameDay"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isSameMonth"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.isSameYear"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.max"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.min"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.setMonth"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"month"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.setYear"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"year"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.startOfDay"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.startOfISOWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.startOfMonth"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.startOfWeek"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLib.startOfYear"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["<",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"undefined"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/next/api/classes/CalendarDay",children:(0,s.jsx)(t.code,{children:"CalendarDay"})})}),"\n",(0,s.jsx)(t.h4,{id:"source",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L12",children:"src/classes/CalendarDay.ts:12"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"isequalto",children:"isEqualTo()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isEqualTo"}),"(",(0,s.jsx)(t.code,{children:"day"}),"): ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Check if the day is the same as the given day: considering if it is in the\nsame display month."}),"\n",(0,s.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"day"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/classes/CalendarDay",children:(0,s.jsx)(t.code,{children:"CalendarDay"})})})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"source-1",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L52",children:"src/classes/CalendarDay.ts:52"})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"date",children:"date"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"readonly"})," ",(0,s.jsx)(t.strong,{children:"date"}),": ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The date represented by this day."}),"\n",(0,s.jsx)(t.h4,{id:"source-2",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L46",children:"src/classes/CalendarDay.ts:46"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"datelib",children:"dateLib"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"readonly"})," ",(0,s.jsx)(t.strong,{children:"dateLib"}),": {",(0,s.jsx)(t.code,{children:"Date"}),": ",(0,s.jsx)(t.code,{children:"GenericDateConstructor"}),"<",(0,s.jsx)(t.code,{children:"Date"}),">;",(0,s.jsx)(t.code,{children:"addDays"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"addMonths"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"addWeeks"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"addYears"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"differenceInCalendarDays"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"}),";",(0,s.jsx)(t.code,{children:"differenceInCalendarMonths"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"}),";",(0,s.jsx)(t.code,{children:"endOfISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"endOfMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"endOfWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"endOfYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"format"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"formatStr"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"string"}),";",(0,s.jsx)(t.code,{children:"getISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"}),";",(0,s.jsx)(t.code,{children:"getUnixTime"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"}),";",(0,s.jsx)(t.code,{children:"getWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"number"}),";",(0,s.jsx)(t.code,{children:"isAfter"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"}),";",(0,s.jsx)(t.code,{children:"isBefore"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"}),";",(0,s.jsx)(t.code,{children:"isDate"}),": (",(0,s.jsx)(t.code,{children:"value"}),") => ",(0,s.jsx)(t.code,{children:"value is Date"}),";",(0,s.jsx)(t.code,{children:"isSameDay"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"}),";",(0,s.jsx)(t.code,{children:"isSameMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"}),";",(0,s.jsx)(t.code,{children:"isSameYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"}),";",(0,s.jsx)(t.code,{children:"max"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"}),";",(0,s.jsx)(t.code,{children:"min"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"}),";",(0,s.jsx)(t.code,{children:"setMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"month"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"setYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"year"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"startOfDay"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"startOfISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"startOfMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"startOfWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"}),";",(0,s.jsx)(t.code,{children:"startOfYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"}),"; }"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The utility functions to manipulate dates."}),"\n",(0,s.jsx)(t.h4,{id:"date-1",children:"Date"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Date"}),": ",(0,s.jsx)(t.code,{children:"GenericDateConstructor"}),"<",(0,s.jsx)(t.code,{children:"Date"}),">"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The constructor of the date object."}),"\n",(0,s.jsxs)(t.p,{children:["You can pass a ",(0,s.jsx)(t.code,{children:"DateConstructor"})," such as ",(0,s.jsx)(t.code,{children:"UTCDate"})," from ",(0,s.jsx)(t.code,{children:"@date-fns/utc"})," to\nuse UTC dates."]}),"\n",(0,s.jsx)(t.h5,{id:"see",children:"See"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates",children:"https://react-day-picker.js.org/using-daypicker/localization#utc-dates"})}),"\n",(0,s.jsx)(t.h4,{id:"adddays",children:"addDays()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"addDays"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"amount"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of days to be added."})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"addmonths",children:"addMonths()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"addMonths"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-1",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"amount"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of months to be added."})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"addweeks",children:"addWeeks()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"addWeeks"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-2",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"amount"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of weeks to be added."})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"addyears",children:"addYears()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"addYears"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"amount"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-3",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"amount"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of years to be added."})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"differenceincalendardays",children:"differenceInCalendarDays()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"differenceInCalendarDays"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-4",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-6",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLeft"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The later date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateRight"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The earlier date"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"number"})}),"\n",(0,s.jsx)(t.h4,{id:"differenceincalendarmonths",children:"differenceInCalendarMonths()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"differenceInCalendarMonths"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-5",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-7",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLeft"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The later date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateRight"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The earlier date"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"number"})}),"\n",(0,s.jsx)(t.h4,{id:"endofisoweek",children:"endOfISOWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"endOfISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-6",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-8",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"endofmonth",children:"endOfMonth()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"endOfMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-7",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-9",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"endofweek",children:"endOfWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"endOfWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-8",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-10",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"options"}),"?"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"EndOfWeekOptions"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"endofyear",children:"endOfYear()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"endOfYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-9",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-11",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"format",children:"format()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"format"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"formatStr"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-10",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-12",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"formatStr"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"options"}),"?"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/next/api/interfaces/FormatOptions",children:(0,s.jsx)(t.code,{children:"FormatOptions"})})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.h4,{id:"getisoweek",children:"getISOWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"getISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-11",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-13",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-13",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"number"})}),"\n",(0,s.jsx)(t.h4,{id:"getunixtime",children:"getUnixTime()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"getUnixTime"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-12",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-14",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-14",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"number"})}),"\n",(0,s.jsx)(t.h4,{id:"getweek",children:"getWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"getWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-13",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-15",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The given date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"options"}),"?"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"GetWeekOptions"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-15",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"number"})}),"\n",(0,s.jsx)(t.h4,{id:"isafter",children:"isAfter()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isAfter"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-14",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-16",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date that should be after the other one to return true"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateToCompare"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to compare with"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-16",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"isbefore",children:"isBefore()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isBefore"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"dateToCompare"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-15",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-17",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date that should be before the other one to return true"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateToCompare"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to compare with"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-17",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"isdate",children:"isDate()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isDate"}),": (",(0,s.jsx)(t.code,{children:"value"}),") => ",(0,s.jsx)(t.code,{children:"value is Date"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-18",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"value"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"unknown"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The value to check"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-18",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"value is Date"})}),"\n",(0,s.jsx)(t.h4,{id:"issameday",children:"isSameDay()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isSameDay"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-16",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-19",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLeft"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateRight"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-19",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"issamemonth",children:"isSameMonth()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isSameMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-17",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-20",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLeft"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateRight"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-20",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"issameyear",children:"isSameYear()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"isSameYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dateLeft"}),", ",(0,s.jsx)(t.code,{children:"dateRight"}),") => ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-18",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-21",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateLeft"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The first date to check"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dateRight"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The second date to check"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-21",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h4,{id:"max",children:"max()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"max"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-19",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-22",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dates"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"}),")[]"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The dates to compare"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-22",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n",(0,s.jsx)(t.h4,{id:"min",children:"min()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"min"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"dates"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-20",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-23",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"dates"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"}),")[]"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The dates to compare"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-23",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"DateType"})," | ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n",(0,s.jsx)(t.h4,{id:"setmonth",children:"setMonth()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"setMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"month"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-21",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-24",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"month"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The month index to set (0-11)"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-24",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"setyear",children:"setYear()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"setYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"year"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-22",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-25",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The date to be changed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"year"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"number"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The year of the new date"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-25",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"startofday",children:"startOfDay()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"startOfDay"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-23",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-26",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-26",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"startofisoweek",children:"startOfISOWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"startOfISOWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-24",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-27",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-27",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"startofmonth",children:"startOfMonth()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"startOfMonth"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-25",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-28",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-28",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"startofweek",children:"startOfWeek()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"startOfWeek"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),", ",(0,s.jsx)(t.code,{children:"options"}),"?) => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-26",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-29",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"options"}),"?"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"StartOfWeekOptions"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"An object with options"})]})]})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-29",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"startofyear",children:"startOfYear()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"startOfYear"}),": <",(0,s.jsx)(t.code,{children:"DateType"}),">(",(0,s.jsx)(t.code,{children:"date"}),") => ",(0,s.jsx)(t.code,{children:"DateType"})]}),"\n"]}),"\n",(0,s.jsx)(t.h5,{id:"type-parameters-27",children:"Type parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"DateType"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"Date"})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"Date"})," type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like ",(0,s.jsx)(t.a,{href:"https://github.com/date-fns/utc",children:(0,s.jsx)(t.code,{children:"UTCDate"})}),"."]})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"parameters-30",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"date"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"string"})," | ",(0,s.jsx)(t.code,{children:"number"})," | ",(0,s.jsx)(t.code,{children:"DateType"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The original date"})]})})]}),"\n",(0,s.jsx)(t.h5,{id:"returns-30",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"DateType"})}),"\n",(0,s.jsx)(t.h4,{id:"source-3",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L26",children:"src/classes/CalendarDay.ts:26"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"displaymonth",children:"displayMonth"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"readonly"})," ",(0,s.jsx)(t.strong,{children:"displayMonth"}),": ",(0,s.jsx)(t.code,{children:"Date"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The months where the day is displayed."}),"\n",(0,s.jsxs)(t.p,{children:["In DayPicker, days can fall out the displayed months (e.g. when\n",(0,s.jsx)(t.code,{children:"showOutsideDays"})," is ",(0,s.jsx)(t.code,{children:"true"}),"). This property is useful to know if the day is\nin the same month of the displayed month."]}),"\n",(0,s.jsx)(t.h4,{id:"source-4",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L43",children:"src/classes/CalendarDay.ts:43"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"outside",children:"outside"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"readonly"})," ",(0,s.jsx)(t.strong,{children:"outside"}),": ",(0,s.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Whether the day is not belonging to the displayed month."}),"\n",(0,s.jsxs)(t.p,{children:["When ",(0,s.jsx)(t.code,{children:"outside"})," is ",(0,s.jsx)(t.code,{children:"true"}),", use ",(0,s.jsx)(t.code,{children:"displayMonth"})," to know to which month the day\nbelongs."]}),"\n",(0,s.jsx)(t.h4,{id:"source-5",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/gpbl/react-day-picker/blob/3cd890498aa6ba072029f6836738d6fb128a6f26/src/classes/CalendarDay.ts#L34",children:"src/classes/CalendarDay.ts:34"})})]})}function a(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},82844:(e,t,l)=>{l.d(t,{Z:()=>i,a:()=>r});var s=l(92379);const d={},n=s.createContext(d);function r(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);