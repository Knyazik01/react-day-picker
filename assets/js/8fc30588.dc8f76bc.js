"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7686],{3237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>r});var s=t(651),i=t(1725);const o={sidebar_position:2},a="Custom Selections",l={id:"advanced-guides/custom-selections",title:"Custom Selections",description:"This documentation is still a work in progress. If you have any questions, ask to the discussions page on Github.",source:"@site/docs/advanced-guides/custom-selections.mdx",sourceDirName:"advanced-guides",slug:"/advanced-guides/custom-selections",permalink:"/advanced-guides/custom-selections",draft:!1,unlisted:!1,editUrl:"https://github.com/gpbl/react-day-picker/tree/main/docs/advanced-guides/custom-selections.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Input Fields",permalink:"/advanced-guides/input-fields"},next:{title:"Custom Modifiers",permalink:"/advanced-guides/custom-modifiers"}},c={},r=[{value:"Example: Single Selection",id:"example-single-selection",level:3},{value:"Example: Multi Selections",id:"example-multi-selections",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components},{BrowserWindow:t,Examples:o}=n;return t||m("BrowserWindow",!0),o||m("Examples",!1),o.CustomMultiple||m("Examples.CustomMultiple",!0),o.CustomSingle||m("Examples.CustomSingle",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"custom-selections",children:"Custom Selections"}),"\n",(0,s.jsx)(n.admonition,{title:"Draft",type:"info",children:(0,s.jsxs)(n.p,{children:["This documentation is still a work in progress. If you have any questions, ask to the ",(0,s.jsx)(n.a,{href:"https://github.com/gpbl/react-day-picker/discussions",children:"discussions"})," page on Github."]})}),"\n",(0,s.jsxs)(n.p,{children:["If the built-in selection modes are not enough for your app\u2019s requirements, you can control the selection behavior using ",(0,s.jsx)(n.code,{children:"onDayClick"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"example-single-selection",children:"Example: Single Selection"}),"\n",(0,s.jsxs)(n.p,{children:['For example, to implement the "single selection" behavior (like when ',(0,s.jsx)(n.code,{children:'mode="single"'}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { useState } from "react";\n\nimport { DayPicker, DayPickerProps } from "react-day-picker";\n\nexport function CustomSingle() {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>();\n\n  const modifiers: DayPickerProps["modifiers"] = {};\n  if (selectedDate) {\n    modifiers.selected = selectedDate;\n  }\n  return (\n    <DayPicker\n      modifiers={modifiers}\n      onDayClick={(day, modifiers) => {\n        if (modifiers.selected) {\n          setSelectedDate(undefined);\n        } else {\n          setSelectedDate(day);\n        }\n      }}\n      footer={selectedDate && `You selected ${selectedDate.toDateString()}`}\n    />\n  );\n}\n'})}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)(o.CustomSingle,{})}),"\n",(0,s.jsx)(n.h3,{id:"example-multi-selections",children:"Example: Multi Selections"}),"\n",(0,s.jsxs)(n.p,{children:["The case of a multi-days select is a bit more complex as it deals with an array. The following example replicates the ",(0,s.jsx)(n.code,{children:'mode="multiple"'}),"\nselection mode."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { useState } from "react";\n\nimport { isSameDay } from "date-fns";\nimport { DayMouseEventHandler, DayPicker } from "react-day-picker";\n\nexport function CustomMultiple() {\n  const [value, setValue] = useState<Date[]>([]);\n\n  const handleDayClick: DayMouseEventHandler = (day, modifiers) => {\n    const newValue = [...value];\n    if (modifiers.selected) {\n      const index = value.findIndex((d) => isSameDay(day, d));\n      newValue.splice(index, 1);\n    } else {\n      newValue.push(day);\n    }\n    setValue(newValue);\n  };\n\n  const handleResetClick = () => setValue([]);\n\n  let footer = <>Please pick one or more days.</>;\n\n  if (value.length > 0)\n    footer = (\n      <>\n        You selected {value.length} days.{" "}\n        <button onClick={handleResetClick}>Reset</button>\n      </>\n    );\n\n  return (\n    <DayPicker\n      onDayClick={handleDayClick}\n      modifiers={{ selected: value }}\n      footer={footer}\n    />\n  );\n}\n'})}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)(o.CustomMultiple,{})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1725:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var s=t(2379);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);